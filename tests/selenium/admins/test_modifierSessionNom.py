# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.common.exceptions import NoSuchElementException


script_ajout = """
<script>
    var redDiv = document.createElement('div');
    redDiv.classList.add('red-div');
    document.body.appendChild(redDiv);
</script>
"""

class TestModifierSession():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
    self.driver.implicitly_wait(2)

  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_modifierSession(self):
    self.driver.get("https://apeaj.alwaysdata.net/choix-formation")
    self.driver.set_window_size(794, 816)
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(1) .fw-bold").click()
    self.driver.find_element(By.ID, "btn-admin").click()
    self.driver.find_element(By.ID, "loginAdmin").click()
    self.driver.find_element(By.ID, "loginAdmin").send_keys("gregory.cazal")
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) > div:nth-child(1) > .btn-number:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) > div:nth-child(1) > .btn-number:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) > div:nth-child(1) > .btn-number:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) > div:nth-child(1) > .btn-number:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) > div:nth-child(1) > .btn-number:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) > div:nth-child(1) > .btn-number:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) > div > .btn-success").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(11) .bi").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".bi-pencil")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".bi-pencil").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "sessionName").click()
    self.driver.find_element(By.ID, "sessionName").send_keys(script_ajout)
    self.driver.find_element(By.ID, "theme").click()
    self.driver.find_element(By.ID, "theme").send_keys("testt")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("testt")
    self.driver.find_element(By.CSS_SELECTOR, "form > .modal-footer > .btn-success").click()

    # Vérifier si la div red-div est présente
    div_presente = self.est_div_red_presente()
    # Si la div est présente, le test échoue
    assert not div_presente, "La div red-div a été créée après l'injection du script"


  def est_div_red_presente(self):
      try:
          self.driver.find_element(By.CSS_SELECTOR, ".red-div")
          return True
      except NoSuchElementException:
          return False
  
